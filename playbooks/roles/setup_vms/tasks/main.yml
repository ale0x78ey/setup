######################
# Install requirements
######################

- name: setup_vms [debian] | install requirements
  package: name="{{ item }}"
  become: yes
  with_items: "{{ libvirt_requirements_debian }}"
  when: ansible_os_family == "Debian"

- name: setup_vms | install -U pip [pip]
  pip:
    name: pip
    extra_args: "-U"

- name: setup_vms | install requirements [pip]
  pip:
    name: "{{ libvirt_requirements_pip }}"

#########
# Configs
#########

# For performance and security reasons, disable netfilter for bridges.
# See <https://bugzilla.redhat.com/show_bug.cgi?id=512206#c0>
- name: setup_vms [debian] | disable netfilter for bridges
  sysctl: name="{{ item }}" value=0
  become: yes
  with_items:
    - "net.bridge.bridge-nf-call-ip6tables"
    - "net.bridge.bridge-nf-call-iptables"
    - "net.bridge.bridge-nf-call-arptables"
  when: ansible_os_family == "Debian"

- name: setup_vms | create /var/lib/libvirt/images/* directories
  file:
    path: "/var/lib/libvirt/images/{{ item.name }}"
    mode: "644"
    state: directory
    recurse: yes
  become: yes
  with_items: "{{ vms }}"

- name: setup_vms | install /var/lib/libvirt/images/*/*
  template:
    src: "{{ item[1] }}.j2"
    dest: "/var/lib/libvirt/images/{{item[0].name}}/{{ item[1] }}"
    mode: "664"
  become: yes
  with_nested:
    - "{{ vms }}"
    - [ "meta-data", "user-data" ]

- name: setup_vms | download vm images from S3
  amazon.aws.aws_s3:
    bucket: "{{ s3_yandex.bucket }}"
    object: "myenv/var/lib/libvirt/images/{{ item.name }}/{{ item.name }}.qcow2"
    s3_url: "{{ s3_yandex.s3_url }}"
    region: "{{ s3_yandex.region }}"
    aws_access_key: "{{ s3_yandex.access_key }}"
    aws_secret_key: "{{ s3_yandex.secret_key }}"
    dest: "/var/lib/libvirt/images/{{ item.name }}/{{ item.name }}.qcow2"
    mode: get
    overwrite: never
  ignore_errors: yes
  become: yes
  with_items: "{{ vms }}"
