version: '3'

x-airflow-common:
  &airflow-common
  image: {{ docker_image_prefix }}apache/airflow:{{ airflow_docker_tag }}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://{{ postgres_user }}:{{ postgres_password }}@postgres/{{ postgres_db }}
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://{{ postgres_user }}:{{ postgres_password }}@postgres/{{ postgres_db }}
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:{{ redis_port }}/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
  volumes:
    - {{ airflow_dags_dir }}:/opt/airflow/dags
    - {{ airflow_logs_dir }}:/opt/airflow/logs
    - {{ airflow_plugins_dir }}:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  nginx:
    image: {{docker_image_prefix }}nginx:{{ nginx_docker_tag }}
    ports:
      - {{ nginx_port }}:80
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:{{ nginx_port }}/" ]
      interval: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - /etc/nginx/templates:/etc/nginx/templates:ro

  redis:
    image: {{ docker_image_prefix }}redis:{{ redis_docker_tag }}
    ports:
      - {{ redis_port }}:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    image: {{ docker_image_prefix }}postgres:{{ postgres_docker_tag }}
    ports:
      - {{ postgres_port }}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "{{ postgres_user }}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    environment:
      - POSTGRES_DB={{ postgres_db }}
      - POSTGRES_USER={{ postgres_user }}
      - POSTGRES_PASSWORD={{ postgres_password }}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - {{ airflow_webserver_port }}:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:{{ airflow_webserver_port }}/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: {{ airflow_init_user }}
      _AIRFLOW_WWW_USER_PASSWORD: {{ airflow_init_password }}

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - {{ airflow_flower_port }}:5555
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:{{ airflow_flower_port }}/" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres-db-volume:
